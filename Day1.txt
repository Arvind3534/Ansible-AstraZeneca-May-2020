Rajesh Kumar
==============================
www.RajeshKumar.xyz
===============================


Lab + Demo - AWS
Start : 9:30 AM
End : 5:30 
==========================
1 PM - 1:45 PM - Lunch
11:00 AM - Tea break
3:30 PM - Tea break
=========================
===========================================================
Where can you use Ansible?
==========================================================
Prod - prodx
Mgmr - MgrX

Software Dev Model -> Waterfall -> Agile -> DevOps
Software Arch -> Monolithic -> SOA -> Microservices 

What is DevOps?
=======================
https://www.devopsschool.com/videos/387/complete-cicd-devops-implementation-from-scratch-using-jenkins-by-devopsschool/

Objective of DevOps
	- Immediate release
	- Cost reduction of the software
	- Quality Release

==========================================================
Architect -> Dev -> BR -> QA -> Ops

Plan - Architect
	- Jira - Conflunce Wiki
Coding - 17 Module -17 Dev
	Git with github
Code Review - 
	PEER
	Static- 
Build
	Maven - Ant - MSBUILD, Gradle
Unit test - 
		Junit - Nunit
Packaging
		System - exe - dmg - rpm - deb
		App - zip,war,jar,ear,bin,so		
Archiving
		Nexus - Artifactory - Nuget - Archiva

Deploy to Env.
==========================
	Dev
		Web Server(S) 
		App Server(S) 
		DB server(S) 
	QA
		Web Server(S) - 30
		App Server(S) - 50
		DB server(S) - 20
	Staging
		Web Server(S)
		App Server(S)
		DB server(S)
	Int
		Web Server(S)
		App Server(S)
		DB server(S)
	Prod
		Web Server(S) - 30
		App Server(S) - 50
		DB server(S) - 20
=========================================

	WEB 	25 APACHE 25 Ng 25 IIS 25 W
	APP 	25 TOMCAT 25 JBOSS 25 WL 25 WS
	DB	25 mysql 25 oracle 25 mssql 25 ps
	10s....

1 Dep ---> 9 mins
100 Dep ---> 9 mins
--------------------------
		Parallel deployment capability?


Which tool can have Parallel deployment capability?
=============================================================
Programming - Ansible -> Puppet -> Chef -> Salt
Gui - Octopus Deploy, UDeploy

Where can you use ansible?
		Parallel change mgmt in servers.
	
https://www.devopsschool.com/path/
=========================================================================
1 Dep ---> 1 sec
1000 Dep ---> 1 sec
--------------------------
Docker -> Kubernetes
https://www.devopsschool.com/videos/show/docker?type=video


What role your org is expecting from you....
--------------------------------
Programmer
		Coding for Prod
		Coding for testing a prod
		Coding for infra - Ansible - terraform - Docker - Kubernetes


Testing
	
	


What is Ansible?
==========================================
- Config mgmt tool.
- For Consitent change mgmt in servers
- Written in Python
- From redhat
- Release
	Community - CMD - Open source - Free
	Enterprise - CMD -> GUI - Paid - Tower
- Agent less

What is Config mgmt?
=========================================
	SERVER(S) Config mgmt

What is there in SERVER? of managing config?
=========================================

Resources

file			config of this res using Ansible for multiple server.
services		config
package			config
user			config
group			config
shell			config
bash			config
ps			config
yum			config				
apt

============================================
Why Ansible?
==================
	Easy to learn - test - debug - extend - share
		compare to java,c++,perl python 
	Platform indep
	
	IDEOMPOTENT
	10 Steps - 1 Step take 1 min - 10 mins
	========================================
	1 deploy ------10 changes----------------10 mins
	2 deploy -----2 changes -------2 mins




How Ansible Works?
===================================================================
ACS - Ansible Control Server
ARS - Ansible Remote Server


ACS				ARS
============================================
Linux				Windows 
				Linux
64BIT				32 - 64 bit

-------------------SSH---------> LINUX
-------------------WINRM---------> Windows
Python2.7			Linux(Python 2.7+)
				Windows (PS 3.0 + DOT NET 4.0)

Other tools - 
========================================
Your Roles in Ansible
========================================
Dev  - Will write and test ansible code.
Ops - Will  Manage server(s), env, access and Apply "ansible code" into server(s).
=====================================
How to become Ansible programmers?
============================================================================================
How to become Java programmers?

JDK -> .java 		-> .Class (.Class(s) ---> Jar --> (.jar(s) --> War file

	Data Types
	Operators
	Conditioing
	Looping
	Methods aka Funtions
	Class
	Interface


Ansible -> Play(.yaml) --> Playbook(.yaml) --> Role
	Data Types
	Operators
	Conditioing
	Looping
	Methods aka Funtions

How to setup and install Ansible?
==================================================
13.232.132.196
ec2-user

https://www.devopsschool.com/blog/how-to-install-ansible-in-centos-7-rhel-7/
https://www.devopsschool.com/blog/how-to-login-linux-server-of-aws-from-windows-using-putty/


    1  clear
    2  ls
    3  wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    4  sudo yum install wget -y
    5  wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    6  yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    7  sudo rpm -i epel-release-latest-7.noarch.rpm
    8  sudo rpm -i epel-release-latest-7.noarch.rpm
    9  sudo yum install ansible -y
   10  clear
   11  ansible --version
   12  ansible -help
   13  clear
   14  history

====================================================
Evolution of Lang
============================
Compiled ---> Interpreted ->  Declarative
				xml -> yaml -> json
===========================================================

Components of Ansible in ACS
=================================================
- Ansible
	ansible - /bin/ansible
	Modules - 
	Config - /etc/ansible/ansible.cfg

- Code aka Playbook


- Server details aka inventory aka hosts
============================================================
What is Module????
	is doing one TASK
			Accept parameters

Create a dir?
========================= AKA Module
mkdir path/dirname

https://docs.ansible.com/ansible/latest/modules/modules_by_category.html


What is Playbook?
represent in YAMl
===========================
PLAY1
	Host(S) - This is group name of servers where it need to be executed
	TASK(S)
		Task1 - ONE Module name with Param
		Task2 - ONE Module name with Param
		Task3 - ONE Module name with Param
		Task4 - ONE Module name with Param
PLAY2	
	Host(S) - This is group name of servers where it need to be executed
	TASK(S)
		Task1 - ONE Module name with Param
		Task2 - ONE Module name with Param
		Task3 - ONE Module name with Param
		Task4 - ONE Module name with Param

PLAY3
	Host(S) - This is group name of servers where it need to be executed
	TASK(S)
		Task1 - ONE Module name with Param
		Task2 - ONE Module name with Param
		Task3 - ONE Module name with Param
		Task4 - ONE Module name with Param



cookbook
	recipe
		ingred
		How ???


What is aka inventory aka hosts?????
================================================
inventory is nothing but [ list of IP addresss - ARS]
	Can be passed on commmand line
	can be passed into file separetd by new line.
	can be passed into script



==========================================================================
How to get started with it?


DO one thing --> Linux -> 
		commmand
		shell scripting

	using ADHOC command 
		Do one task in ONE MACHINE(localhost)
		Do one task in ONE REMOTE MACHINE
		Do one task in MULTIPLE REMOTE MACHINES using Inventory

		Do one task in MULTIPLE REMOTE MACHINES using group in Inventory
	using Playbook(Program)
		Do Multiple tasks(Playbook) in ONE MACHINE(localhost)
		Do Multiple tasks(Playbook) in ONE REMOTE MACHINE
		Do Multiple tasks(Playbook) in MULTIPLE REMOTE MACHINE using Inventory
		Do Multiple tasks(Playbook) in MULTIPLE REMOTE MACHINE using group in Inventory
		Do Multiple tasks(Playbook) in MULTIPLE REMOTE MACHINE using group of group in Inventory
		Do Multiple tasks(Playbook) in MULTIPLE REMOTE MACHINE using environment directory Inventory 
		
	using Role(Program)
		Do One Role in in ONE MACHINE(localhost)
		Do Multiple Roles in ONE REMOTE MACHINE
		Do Multiple Roles in MULTIPLE REMOTE MACHINE using Inventory
		Do Multiple Roles in MULTIPLE REMOTE MACHINE using group in Inventory
		Do Multiple Roles in MULTIPLE REMOTE MACHINE using group of group in Inventory
		Do Multiple Roles in MULTIPLE REMOTE MACHINE using environment directory Inventory

===============================================================================
How to create adhoc commands?
- "ansible"
====================================================
What is your requirement of deplolyment? projects? use? deploy?
==================================================================
Setup a webserver in 100 machine?
psu code
-----------------------
Step 1 - Install httpd				Module Name - yum  Param - state=present  name=httpd
Step 2 - Copy index.html to /var/www/html	Module Name - copy   Param - dest=/var/www/html src=index.html
Step 3 - start a service			Module Name - service  Param - name=httpd state=started
Step 4 - create a dir /tmp/ansible		Module Name - file  Param - path=/tmp/ansible state=directory
Step 5 - create a file into /tmp/ansible/devopsschool.txt	Module Name - file  Param - path=/tmp/ansible/devopsschool.txt state=touch

---------"ansible module for"------------------------------------
- Flow in which you would run???
- Dependent steps

ansible localhost -m yum -a"state=present  name=httpd"
 39  ansible localhost -m yum -a"state=present  name=httpd"
   40  clear
   41  ansible localhost -m yum -a"state=present  name=httpd"
   42  clear
   43  ansible localhost -m yum -a"state=present  name=httpd" -vvvvv

ansible localhost -m copy -a"dest=/var/www/html src=index.html"
ansible localhost -m service -a"name=httpd state=started"
ansible localhost -m file -a"path=/tmp/ansible state=directory"
ansible localhost -m file -a"path=/tmp/ansible/devopsschoo.txt state=touch"


Setup a appserver in 100 machine?


Setup a dbserver in 100 machine?
===================================================================================

Lab and Assignment 1 - 
https://www.devopsschool.com/blog/ansible-adhoc-commands-lab-excercise-part-1/


Ravi		13.233.148.41
Subash			13.127.45.97
Prayerna Bhat		13.233.198.58
Azhar Md Ali		13.127.175.68
Radha Thirunavukkarasu	13.233.90.77
Manickam Kamalakkannan	13.235.19.18
Priya Kesavan		52.66.16.112
Kathambari		52.66.209.89	
Muthukumaran Loganathan	52.66.178.35
Pramoda Kumar Jena	13.233.244.151
Rajakumar Dharmalingam	13.235.134.255
Sathyaprakash		13.235.100.91
Sankar S		13.233.53.214
Nirmala Dhashnamurthy	3.6.38.127
Hinduja sivaji		52.66.204.15
Priyanka Ashokan	13.233.164.202	

ec2-user
Key - https://www.devopsschool.com/notes/docker/2019/
file name - rajesh-mumbai.ppk
============================================================

======================================
How Ansible(ACS) Authenticate to ARS?
	          ------------
---------------------------
- ssh
---------------------------
- local
- winrm
- smart
- paramiko
- docker

https://www.devopsschool.com/blog/ansible-execution-connection-type/

How ssh auth works?
=======================
USERNAME 		PASSWORD
USERNAME		KEY


What user can do? aka AUTHORIZATION????
	SUDO without Password
	SUDO with Password
	Sudo diff USER and Password
	
ansible localhost -m yum -a"state=present  name=httpd"
ansible localhost -m copy -a"dest=/var/www/html src=index.html"
ansible localhost -m service -a"name=httpd state=started"
ansible localhost -m file -a"path=/tmp/ansible state=directory"
ansible localhost -m file -a"path=/tmp/ansible/devopsschoo.txt state=touch"


3.6.38.127
ansible -i 3.6.38.127, -m yum -a"state=present  name=httpd"


Inventory - List of IP address...
		 Group
			default - all, nogroup
			custom

ansible all -i 3.6.38.127, -m yum -a"state=present  name=httpd"
=========================================================

How to tell ansible to avoid host check checking for fingerprint?
or
host check checking for fingerprint should be automated?

optional arguments:
  --ask-vault-pass      ask for vault password
  --list-hosts          outputs a list of matching hosts; does not execute
                        anything else
  --playbook-dir BASEDIR
                        Since this tool does not use playbooks, use this as a
                        substitute playbook directory.This sets the relative
                        path for many features including roles/ group_vars/
                        etc.
  --syntax-check        perform a syntax check on the playbook, but do not
                        execute it
  --vault-id VAULT_IDS  the vault identity to use
  --vault-password-file VAULT_PASSWORD_FILES
                        vault password file
  --version             show program's version number, config file location,
                        configured module search path, module location,
                        executable location and exit
  -B SECONDS, --background SECONDS
                        run asynchronously, failing after X seconds
                        (default=N/A)
  -C, --check           don't make any changes; instead, try to predict some
                        of the changes that may occur
  -D, --diff            when changing (small) files and templates, show the
                        differences in those files; works great with --check
  -M MODULE_PATH, --module-path MODULE_PATH
                        prepend colon-separated path(s) to module library (def
                        ault=~/.ansible/plugins/modules:/usr/share/ansible/plu
                        gins/modules)
  -P POLL_INTERVAL, --poll POLL_INTERVAL
                        set the poll interval if using -B (default=15)
  -a MODULE_ARGS, --args MODULE_ARGS
                        module arguments
  -e EXTRA_VARS, --extra-vars EXTRA_VARS
                        set additional variables as key=value or YAML/JSON, if
                        filename prepend with @
  -f FORKS, --forks FORKS
                        specify number of parallel processes to use
                        (default=5)
  -h, --help            show this help message and exit
  -i INVENTORY, --inventory INVENTORY, --inventory-file INVENTORY
                        specify inventory host path or comma separated host
                        list. --inventory-file is deprecated
  -l SUBSET, --limit SUBSET
                        further limit selected hosts to an additional pattern
  -m MODULE_NAME, --module-name MODULE_NAME
                        module name to execute (default=command)
  -o, --one-line        condense output
  -t TREE, --tree TREE  log output to this directory
  -v, --verbose         verbose mode (-vvv for more, -vvvv to enable
                        connection debugging)


 
ansible all -i 3.6.38.127, -m yum -a"state=present  name=httpd" -u=ec2-user --key-file=rajesh-mumbai.pem
=========================================================

wget https://www.devopsschool.com/notes/docker/2019/rajesh-mumbai.pem

Connection Options:
  control as whom and how to connect to hosts

  --private-key PRIVATE_KEY_FILE, --key-file PRIVATE_KEY_FILE
                        use this file to authenticate the connection
  --scp-extra-args SCP_EXTRA_ARGS
                        specify extra arguments to pass to scp only (e.g. -l)
  --sftp-extra-args SFTP_EXTRA_ARGS
                        specify extra arguments to pass to sftp only (e.g. -f,
                        -l)
  --ssh-common-args SSH_COMMON_ARGS
                        specify common arguments to pass to sftp/scp/ssh (e.g.
                        ProxyCommand)
  --ssh-extra-args SSH_EXTRA_ARGS
                        specify extra arguments to pass to ssh only (e.g. -R)
  -T TIMEOUT, --timeout TIMEOUT
                        override the connection timeout in seconds
                        (default=10)
  -c CONNECTION, --connection CONNECTION
                        connection type to use (default=smart)
  -k, --ask-pass        ask for connection password
  -u REMOTE_USER, --user REMOTE_USER
                        connect as this user (default=None)

ansible all -i 3.6.38.127, -m yum -a"state=present  name=httpd" -u=ec2-user --key-file=rajesh-mumbai.pem
=========================================================
chmod 600 rajesh-mumbai.pem

ansible all -i 3.6.38.127, -m yum -a"state=absent  name=httpd" -u=ec2-user --key-file=rajesh-mumbai.pem


What user can do? aka AUTHORIZATION????
Privilege Escalation Options:
  control how and which user you become as on target hosts

  --become-method BECOME_METHOD
                        privilege escalation method to use (default=sudo), use
                        `ansible-doc -t become -l` to list valid choices.
  --become-user BECOME_USER
                        run operations as this user (default=root)
  -K, --ask-become-pass
                        ask for privilege escalation password
  -b, --become          run operations with become (does not imply password
                        prompting)


What user can do? aka AUTHORIZATION????
	SUDO without Password			-b
	SUDO with Password			-K -b
	Sudo diff USER and Password		-b --become-user   -K

Authentication with a Key
====================================================
SUDO without Password
ansible all -i 3.6.38.127, -m yum -a"state=absent  name=httpd" -u=ec2-user --key-file=rajesh-mumbai.pem -b

SUDO with Password
ansible all -i 3.6.38.127, -m yum -a"state=absent  name=httpd" -u=ec2-user --key-file=rajesh-mumbai.pem -b -K

Sudo diff USER and Password
ansible all -i 3.6.38.127, -m yum -a"state=absent  name=httpd" -u=ec2-user --key-file=rajesh-mumbai.pem -b -K --become-user


Authentication with a Password?
====================================================
SUDO without Password
ansible all -i 3.6.38.127, -m yum -a"state=absent  name=httpd" -u=ec2-user -k -b

SUDO with Password
ansible all -i 3.6.38.127, -m yum -a"state=absent  name=httpd" -u=ec2-user --key-file=rajesh-mumbai.pem -b -K -k

Sudo diff USER and Password
ansible all -i 3.6.38.127, -m yum -a"state=absent  name=httpd" -u=ec2-user --key-file=rajesh-mumbai.pem -b -K --become-user -k



ssh normal@server1
$ sudo -s
$ root

ssh normal@server1
$ sudo -s
$ passwprd

ssh normal@server1
$ sudo -s
$ sudo username
$ sudo password


ansible all -i 3.6.38.127, -m yum -a"state=present  name=httpd" -u=ec2-user --key-file=rajesh-mumbai.pem -b
ansible all -i 3.6.38.127, -m copy -a"dest=/var/www/html src=index.html" -u=ec2-user --key-file=rajesh-mumbai.pem -b
ansible all -i 3.6.38.127, -m service -a"name=httpd state=started" -u=ec2-user --key-file=rajesh-mumbai.pem -b
ansible all -i 3.6.38.127, -m file -a"path=/tmp/ansible state=directory" -u=ec2-user --key-file=rajesh-mumbai.pem -b
ansible all -i 3.6.38.127, -m file -a"path=/tmp/ansible/devopsschoo.txt state=touch" -u=ec2-user --key-file=rajesh-mumbai.pem -b







ansible all -i 3.6.38.127,13.233.148.41,13.127.45.97,13.233.198.58,13.127.175.68, -m yum -a"state=present  name=httpd" -u=ec2-user --key-file=rajesh-mumbai.pem -b
ansible all -i 3.6.38.127,13.233.148.41,13.127.45.97,13.233.198.58,13.127.175.68, -m copy -a"dest=/var/www/html src=index.html" -u=ec2-user --key-file=rajesh-mumbai.pem -b
ansible all -i 3.6.38.127,13.233.148.41,13.127.45.97,13.233.198.58,13.127.175.68, -m service -a"name=httpd state=started" -u=ec2-user --key-file=rajesh-mumbai.pem -b
ansible all -i 3.6.38.127,13.233.148.41,13.127.45.97,13.233.198.58,13.127.175.68, -m file -a"path=/tmp/ansible state=directory" -u=ec2-user --key-file=rajesh-mumbai.pem -b
ansible all -i 3.6.38.127,13.233.148.41,13.127.45.97,13.233.198.58,13.127.175.68, -m file -a"path=/tmp/ansible/devopsschoo.txt state=touch" -u=ec2-user --key-file=rajesh-mumbai.pem -b



ansible all -i 3.6.38.127,13.233.148.41,13.127.45.97,13.233.198.58,13.127.175.68,3.6.38.127,13.233.148.41,13.127.45.97,13.233.198.58,13.127.175.68,3.6.38.127,13.233.148.41,13.127.45.97,13.233.198.58,13.127.175.68,3.6.38.127,13.233.148.41,13.127.45.97,13.233.198.58,13.127.175.68,3.6.38.127,13.233.148.41,13.127.45.97,13.233.198.58,13.127.175.68,3.6.38.127,13.233.148.41,13.127.45.97,13.233.198.58,13.127.175.68,3.6.38.127,13.233.148.41,13.127.45.97,13.233.198.58,13.127.175.68,3.6.38.127,13.233.148.41,13.127.45.97,13.233.198.58,13.127.175.68,3.6.38.127,13.233.148.41,13.127.45.97,13.233.198.58,13.127.175.68, -m yum -a"state=present  name=httpd" -u=ec2-user --key-file=rajesh-mumbai.pem -b

3.6.38.127
13.233.148.41
13.127.45.97
13.233.198.58
13.127.175.68


ansible all -i inventory -m yum -a"state=present  name=httpd" -u=ec2-user --key-file=rajesh-mumbai.pem -b
ansible all -i inventory -m copy -a"dest=/var/www/html src=index.html" -u=ec2-user --key-file=rajesh-mumbai.pem -b
ansible all -i inventory -m service -a"name=httpd state=started" -u=ec2-user --key-file=rajesh-mumbai.pem -b
ansible all -i inventory -m file -a"path=/tmp/ansible state=directory" -u=ec2-user --key-file=rajesh-mumbai.pem -b
ansible all -i inventory -m file -a"path=/tmp/ansible/devopsschoo.txt state=touch" -u=ec2-user --key-file=rajesh-mumbai.pem -b



Ravi		13.233.148.41
Subash			13.127.45.97

Prayerna Bhat		13.233.198.58
Azhar Md Ali		13.127.175.68

Radha Thirunavukkarasu	13.233.90.77
Manickam Kamalakkannan	13.235.19.18

Priya Kesavan		52.66.16.112
Kathambari		52.66.209.89	

Muthukumaran Loganathan	52.66.178.35
Pramoda Kumar Jena	13.233.244.151

Rajakumar Dharmalingam	13.235.134.255
Sathyaprakash		13.235.100.91

Sankar S		13.233.53.214
Nirmala Dhashnamurthy	3.6.38.127

Hinduja sivaji		52.66.204.15
Priyanka Ashokan	13.233.164.202	



